#
# Setting Defaults
#

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.osx` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Install Apple's Command Line Tools
echo 'Installing Apple Command Line Tools'
xcode-select --install

echo 'Set standby delay to 24 hours (default is 1 hour)'
sudo pmset -a standbydelay 86400

echo 'Menu bar: disable transparency'
# defaults write NSGlobalDomain AppleEnableMenuBarTransparency -bool false

echo 'Set sidebar icon size to medium'
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

echo 'Expand save panel by default'
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true

echo 'Expand print panel by default'
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true

echo 'Save to disk (not to iCloud) by default'
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

echo 'Automatically quit printer app once the print jobs complete'
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

echo 'Disable the “Are you sure you want to open this application?” dialog'
defaults write com.apple.LaunchServices LSQuarantine -bool false

echo 'Disable Resume system-wide'
defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false

echo 'Disable automatic termination of inactive apps'
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

echo 'Set Help Viewer windows to non-floating mode'
defaults write com.apple.helpviewer DevMode -bool true

echo 'Check for software updates daily, not just once per week'
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# Disable smart quotes as they’re annoying when typing code
# defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
# defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

echo 'Disable local Time Machine snapshots'
sudo tmutil disablelocal

echo 'Disable hibernation (speeds up entering sleep mode)'
sudo pmset -a hibernatemode 0

echo 'Remove the sleep image file to save disk space'
sudo rm /Private/var/vm/sleepimage
echo 'Create a zero-byte file instead…'
sudo touch /Private/var/vm/sleepimage
echo '…and make sure it can’t be rewritten'
sudo chflags uchg /Private/var/vm/sleepimage

echo 'Disable the sudden motion sensor as it’s not useful for SSDs'
sudo pmset -a sms 0

echo 'Trackpad: enable tap to click for this user and for the login screen'
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

echo 'Use scroll gesture with the Ctrl (^) modifier key to zoom'
defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
# Follow the keyboard focus while zoomed in
defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true

echo 'Automatically illuminate built-in MacBook keyboard in low light'
defaults write com.apple.BezelServices kDim -bool true
echo 'Turn off keyboard illumination when computer is not used for 5 minutes'
defaults write com.apple.BezelServices kDimTime -int 300

echo 'Set language and text formats'
echo 'Note: if you’re in the US, replace `EUR` with `USD`, `Centimeters` with'
echo '`Inches`, `en_GB` with `en_US`, and `true` with `false`.'
defaults write NSGlobalDomain AppleLanguages -array "en"
defaults write NSGlobalDomain AppleLocale -string "en_GB@currency=GBP"
defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
defaults write NSGlobalDomain AppleMetricUnits -bool true

echo 'Require password immediately after sleep or screen saver begins'
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

echo 'Save screenshots to the desktop'
defaults write com.apple.screencapture location -string "${HOME}/Desktop"

echo 'Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)'
defaults write com.apple.screencapture type -string "png"

echo 'Disable shadow in screenshots'
defaults write com.apple.screencapture disable-shadow -bool true

echo 'Enable subpixel font rendering on non-Apple LCDs'
defaults write NSGlobalDomain AppleFontSmoothing -int 2

# Enable HiDPI display modes (requires restart)
# sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

# Show icons for hard drives, servers, and removable media on the desktop
# defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
# defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
# defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
# defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

echo 'Finder: show hidden files by default'
defaults write com.apple.finder AppleShowAllFiles -bool true

echo 'Finder: show all filename extensions'
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

echo 'Finder: allow text selection in Quick Look'
defaults write com.apple.finder QLEnableTextSelection -bool true

echo 'When performing a search, search the current folder by default'
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

echo 'Disable the warning when changing a file extension'
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

echo 'Avoid creating .DS_Store files on network volumes'
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

echo 'Automatically open a new Finder window when a volume is mounted'
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

echo 'Use list view in all Finder windows by default'
echo 'Four-letter codes for the view modes:'
echo 'Flwv ▸ Cover Flow View'
echo 'Nlsv ▸ List View'
echo 'clmv ▸ Column View'
echo 'icnv ▸ Icon View'
defaults write com.apple.Finder FXPreferredViewStyle clmv

echo 'Disable the warning before emptying the Trash'
defaults write com.apple.finder WarnOnEmptyTrash -bool false

echo 'Empty Trash securely by default'
defaults write com.apple.finder EmptyTrashSecurely -bool true

echo 'Enable AirDrop over Ethernet and on unsupported Macs running Lion'
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

echo 'Enable the MacBook Air SuperDrive on any Mac'
sudo nvram boot-args="mbasd=1"

echo 'Show the ~/Library folder'
chflags nohidden ~/Library

echo 'Set the icon size of Dock items to 36 pixels'
defaults write com.apple.dock tilesize -int 36

echo 'Minimize windows into their application’s icon'
defaults write com.apple.dock minimize-to-application -bool true

echo 'Enable spring loading for all Dock items'
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

echo 'Show indicator lights for open applications in the Dock'
defaults write com.apple.dock show-process-indicators -bool false

echo 'Wipe all (default) app icons from the Dock'
echo 'This is only really useful when setting up a new Mac, or if you don’t use'
echo 'the Dock to launch apps.'
defaults write com.apple.dock persistent-apps -array

echo 'Don’t animate opening applications from the Dock'
defaults write com.apple.dock launchanim -bool false

echo 'Disable Dashboard'
defaults write com.apple.dashboard mcx-disabled -bool true

echo 'Don’t show Dashboard as a Space'
defaults write com.apple.dock dashboard-in-overlay -bool true

echo 'Don’t automatically rearrange Spaces based on most recent use'
defaults write com.apple.dock mru-spaces -bool false

echo 'Remove the auto-hiding Dock delay'
defaults write com.apple.dock autohide-delay -float 0

echo 'Automatically hide and show the Dock'
defaults write com.apple.dock autohide -bool true

# Make Dock icons of hidden applications translucent
# defaults write com.apple.dock showhidden -bool true

echo 'Only use UTF-8 in Terminal.app'
defaults write com.apple.terminal StringEncodings -array 4

echo 'Don’t display the annoying prompt when quitting iTerm'
defaults write com.googlecode.iterm2 PromptOnQuit -bool false

echo 'Prevent restoring of launched apps on restart etc'
defaults write -g ApplePersistence -bool no

echo 'Disable Time Machine hassling you each time you plug in a new external drive'
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

echo 'Restart affected apps'
for app in "Dock" "Finder" "Mail" \
        "Messages" "SystemUIServer" "Terminal" \
        ; do
        killall "${app}" > /dev/null 2>&1
done
echo "Initial Tweaks Completed."

#
# Configuring Environment
#

echo 'Setup: Homebrew'
if test ! $(which brew); then
  echo "Installing homebrew…"
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

echo 'Setup: Update Homebrew'
brew update
echo 'Complete: Homebrew installed & updated.'

echo 'Setup: Install GNU core utilities (those that come with OS X are outdated)'
brew install coreutils

echo 'Setup: Install Bash'
brew install bash

echo 'Setup: Install more recent versions of some OS X tools'
brew tap homebrew/dupes
brew install homebrew/dupes/grep

echo 'Setup: Brew Cleanup'
brew cleanup

echo 'Install: git'
brew install git
echo "Complete: git installed"

echo 'Setup Oh-My-Zsh'
curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
echo "Oh My Zsh Installed."

echo 'Install rbenv'
brew install rbenv ruby-build

rbenv init
rbenv install 2.1.5
rbenv global 2.1.5

echo "rbenv Installed."

eval "$(rbenv init -)"

echo 'Installing Sass'
gem install sass
echo "Sass installed."
gem update

echo 'Installing PHP 5.4'
curl -s http://php-osx.liip.ch/install.sh | bash -s 5.4
echo 'PHP 5.4 Installed'

# TODO: See about installing NVM here via HomeBrew

#
# Putting Aliases in Place
#

echo 'Setting up Aliases'

sudo rm -rf ~/.aliases
ln -s ~/.dotfiles/.aliases ~/.aliases

sudo rm -rf ~/.editorconfig
ln -s ~/.dotfiles/.editorconfig ~/.editorconfig

sudo rm -rf ~/.functions
ln -s ~/.dotfiles/.functions ~/.functions

sudo rm -rf ~/.gemrc
ln -s ~/.dotfiles/.gemrc ~/.gemrc

sudo rm -rf ~/.gitconfig
ln -s ~/.dotfiles/.gitconfig ~/.gitconfig

sudo rm -rf ~/.gitignore
ln -s ~/.dotfiles/.gitignore ~/.gitignore

sudo rm -rf ~/.npmrc
ln -s ~/.dotfiles/.npmrc ~/.npmrc

sudo rm -rf ~/.variables
ln -s ~/.dotfiles/.variables ~/.variables

sudo rm -rf ~/.zlogin
ln -s ~/.dotfiles/.zlogin ~/.zlogin

sudo rm -rf ~/.zshrc
ln -s ~/.dotfiles/.zshrc ~/.zshrc

echo 'Aliases set up'





echo "Setup Complete. Please restart to ensure all shinies are installed."
echo "You will still need to do some manuall installation. In particular NPM and Grunt need to be setup."
echo "Please also ensure that your .bash_profile/.zshrc only export the PATH variable once. This should be the last instance of the PATH variable."

# open http://nodejs.org/download/
# open http://gruntjs.com/getting-started